/*
 * generated by Xtext 2.10.0
 */
grammar InternalMyABDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.ancit.examples.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.ancit.examples.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.ancit.examples.xtext.services.MyABDslGrammarAccess;

}

@parser::members {

 	private MyABDslGrammarAccess grammarAccess;

    public InternalMyABDslParser(TokenStream input, MyABDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "AddressBook";
   	}

   	@Override
   	protected MyABDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleAddressBook
entryRuleAddressBook returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddressBookRule()); }
	iv_ruleAddressBook=ruleAddressBook
	{ $current=$iv_ruleAddressBook.current; }
	EOF;

// Rule AddressBook
ruleAddressBook returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAddressBookAccess().getAddressBookAction_0(),
					$current);
			}
		)
		otherlv_1='AddressBook'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddressBookAccess().getAddressBookKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAddressBookAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='groups'
			{
				newLeafNode(otherlv_3, grammarAccess.getAddressBookAccess().getGroupsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getAddressBookAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAddressBookAccess().getGroupsGroupParserRuleCall_3_2_0());
					}
					lv_groups_5_0=ruleGroup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddressBookRule());
						}
						add(
							$current,
							"groups",
							lv_groups_5_0,
							"org.ancit.examples.xtext.MyABDsl.Group");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getAddressBookAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAddressBookAccess().getGroupsGroupParserRuleCall_3_3_1_0());
						}
						lv_groups_7_0=ruleGroup
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddressBookRule());
							}
							add(
								$current,
								"groups",
								lv_groups_7_0,
								"org.ancit.examples.xtext.MyABDsl.Group");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getAddressBookAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='contacts'
			{
				newLeafNode(otherlv_9, grammarAccess.getAddressBookAccess().getContactsKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getAddressBookAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAddressBookAccess().getContactsContactParserRuleCall_4_2_0());
					}
					lv_contacts_11_0=ruleContact
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddressBookRule());
						}
						add(
							$current,
							"contacts",
							lv_contacts_11_0,
							"org.ancit.examples.xtext.MyABDsl.Contact");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getAddressBookAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAddressBookAccess().getContactsContactParserRuleCall_4_3_1_0());
						}
						lv_contacts_13_0=ruleContact
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddressBookRule());
							}
							add(
								$current,
								"contacts",
								lv_contacts_13_0,
								"org.ancit.examples.xtext.MyABDsl.Contact");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getAddressBookAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getAddressBookAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	iv_ruleGroup=ruleGroup
	{ $current=$iv_ruleGroup.current; }
	EOF;

// Rule Group
ruleGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGroupAccess().getGroupAction_0(),
					$current);
			}
		)
		otherlv_1='Group'
		{
			newLeafNode(otherlv_1, grammarAccess.getGroupAccess().getGroupKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGroupAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroupRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.ancit.examples.xtext.MyABDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='contacts'
			{
				newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getContactsKeyword_4_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getGroupAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getGroupAccess().getContactsContactCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getGroupAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getGroupRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getGroupAccess().getContactsContactCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getGroupAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleContact
entryRuleContact returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContactRule()); }
	iv_ruleContact=ruleContact
	{ $current=$iv_ruleContact.current; }
	EOF;

// Rule Contact
ruleContact returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getContactAccess().getContactAction_0(),
					$current);
			}
		)
		otherlv_1='Contact'
		{
			newLeafNode(otherlv_1, grammarAccess.getContactAccess().getContactKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContactAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContactRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.ancit.examples.xtext.MyABDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getContactAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='address'
			{
				newLeafNode(otherlv_4, grammarAccess.getContactAccess().getAddressKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContactAccess().getAddressEStringParserRuleCall_4_1_0());
					}
					lv_address_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContactRule());
						}
						set(
							$current,
							"address",
							lv_address_5_0,
							"org.ancit.examples.xtext.MyABDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='email'
			{
				newLeafNode(otherlv_6, grammarAccess.getContactAccess().getEmailKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContactAccess().getEmailEStringParserRuleCall_5_1_0());
					}
					lv_email_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContactRule());
						}
						set(
							$current,
							"email",
							lv_email_7_0,
							"org.ancit.examples.xtext.MyABDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getContactAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
